# Generated by ChatGPT 4.0 on April 29, 2024.
# Modified by Alexander Torres on 4.29.24 to fix syntax errors and improve readability.
# Additional comments by Alexander Torres and ChatGPT 4.0.

"""
This module controls the process of dropping off coasters with a robotic arm using a specified rail position.
Functions:
- drop_coaster(dexarm): Conducts the coaster drop-off at the specified position and returns the arm to clearance height.

NOTE: Unlike most other abstracted dexarm functions, this one does not contain any error handling. We're going to assume the dexArm can successfuly drop a coaster and nothing else weird is happening. 

EDIT: Changed from "drop_coaster" to "unload_coaster" to make it clearer what this function actually does. - AT 
"""

unloading_X = 295
unloading_Y = 234
unloading_Z = 60
RAIL_SOUTH_POS = 880  # Position of the sliding rail
speedRobot = 6000  # Movement speed

def deposit_coaster(dexarm):
    """
    Executes the sequence to drop a coaster using the Dexarm. It moves the arm to a designated position,
    releases the coaster, and then retracts slightly.
    
    Parameters:
    - dexarm: Instance of Dexarm controlling the robotic arm.
    """
 # Move to the unloading position with reduced X for better clearance
    dexarm.move_to(unloading_X-100, unloading_Y, unloading_Z, RAIL_SOUTH_POS, mode="G0", feedrate=speedRobot)
    
    # Move to the unloading position
    dexarm.move_to(unloading_X, unloading_Y, unloading_Z, RAIL_SOUTH_POS, mode="G0", feedrate=speedRobot)
    
    # Release the coaster
    dexarm.air_picker_stop()
    
    # Retract to clear the drop-off area
    dexarm.move_to(unloading_X, unloading_Y, unloading_Z + 10, RAIL_SOUTH_POS, mode="G1", feedrate=speedRobot)

# Optional testing block
if __name__ == "__main__":
    from pydexarm import Dexarm
    dexarm = Dexarm(port='COM19')
    deposit_coaster(dexarm)


